name: Build, push, and deploy

on: [push]

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: docker.pkg.github.com/${{ github.repository }}/veilarbregistrering

jobs:

  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v1

    - name: Create pretty TAG
      run: echo "::set-env name=PRETTY_TAG::$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7)"

    - name: Get Maven cache
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build with Maven
      run: mvn -B package

    - name: Build and publish Docker image
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        docker build --tag ${IMAGE}:${IMAGE_TAG} --tag ${IMAGE}:latest .
        docker login docker.pkg.github.com -u veilarbregistrering -p ${GITHUB_TOKEN}
        docker push ${IMAGE}

  deploy:
    name: Deploy to NAIS
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Deploy to Q0
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-fss
        RESOURCE: naiserator-q0.yaml
        VAR: version=${IMAGE_TAG}
        DRY_RUN: false

    - name: Deploy to Q1
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-fss
        RESOURCE: naiserator-q1.yaml
        VAR: version=${IMAGE_TAG}
        DRY_RUN: true

    - name: Deploy to production
      uses: nais/deploy/actions/deploy@v1
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: prod-fss
        RESOURCE: naiserator-prod.yaml
        VAR: version=${IMAGE_TAG}
        DRY_RUN: true